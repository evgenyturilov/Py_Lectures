# Задача. В файле хранятся числа, нужно выбрать четные и составить список пар (число - квадрат числа).
# Пример:   1 2 3 5 8 15 23 38
# Получить: [(2, 4), (8, 64), (38, 1444)] 

# Упростим задачу - создадим список чисел, без чтения информации из файла (мое решение)

import random

list = []
for i in range(0, 11):
    list.append(random.randint(1,10))
print(list)

f = lambda i: i**2
new_list = [(i, f(i)) for i in list if i%2 == 0 ]
print(new_list)

# Решение из лекции

def select(f, col):                     # Функция, которая в качестве переменных принимает какую-либо функцию и какие-либо данные
    return [f(x) for x in col]

def where(f, col):                      # Функция. которая содержит условие сортировки
    return [x for x in col if f(x)]

data = '1 2 3 5 8 15 23 38'.split()     # Поскольку результатом чтения данных из файлов является строка, то используем split() для разделения строки (в качестве делителя по умолчанию ' ')

res = select(int, data)                 # Используем встроенную функцию int для преобразования раделенных строковых значений в целочисленные
res = where(lambda x: not x % 2, res)   # Полученный список целочисленных значений из предыдущих вычислений сортируется по признаку четности (здесь not x % 2 -> False, т.е 0, т.е. признак четности )
res = select(lambda x: (x, x**2), res)  # Полученный в предыдущих вычислениях список формируется в список кортежей

print(res)                              # Описанный алгоритм уже существует в python --> функция map()